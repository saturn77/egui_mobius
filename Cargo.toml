[workspace]
members = [ "crates/egui_mobius", "crates/egui_mobius_widgets",
    "crates/egui_mobius_reactive", "crates/egui_mobius_components",
    "examples/clock_async",
    "examples/clock_reactive",
    "examples/dashboard",
    "examples/dashboard_async",
    "examples/reactive",
    "examples/reactive_slider",
    "examples/realtime_plot",
    "examples/ui_refresh_events",
    "examples/logger_component",
    "examples"
]
# exclude = [
    # this example has its own workspace
#    "examples/egui_crux_example"
#]

resolver = "2"

[workspace.package]
edition = "2024"
license = "MIT"
rust-version = "1.85"
version = "0.3.0-alpha.27"

[workspace.dependencies]
# egui mobius related crates
egui_mobius   = { version = "0.3.0-alpha.30", path = "crates/egui_mobius" }
egui_mobius_widgets = { version = "0.3.0-alpha.30", path = "crates/egui_mobius_widgets" }
egui_mobius_reactive = { version = "0.3.0-alpha.30", path = "crates/egui_mobius_reactive" }
egui_mobius_components = { version = "0.3.0-alpha.30", path = "crates/egui_mobius_components" }

# egui and eframe
egui_plot = "0.31.0"
egui = "0.31.1"
eframe = { version = "0.31.1", default-features = false }
egui-winit = { version = "0.31.1", features = ["accesskit"] }
egui_extras = "0.31.1"
egui_taffy = "0.7.0"
# random number generation, useful for testing and examples
rand = "0.9.0"

# async support
tokio = "1.43.0"

# logging and environment
log = "0.4"
env_logger = "0.9"

# date and time
chrono = "0.4.40"

# utilities
lazy_static = "1.5.0"
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
ron = "0.8"
dirs = "5.0"

# windowing
winit = "0.30.9"

# alternative to std::sync::mpsc
crossbeam-channel = "0.5.14"

# The profile that 'dist' will build with
[profile.dist]
inherits = "release"
lto = "thin"

[workspace.lints.rust]
unsafe_code = "deny"

elided_lifetimes_in_paths = "warn"
future_incompatible = { level = "warn", priority = -1 }
nonstandard_style = { level = "warn", priority = -1 }
rust_2018_idioms = { level = "warn", priority = -1 }
rust_2021_prelude_collisions = "warn"
semicolon_in_expressions_from_macros = "warn"
trivial_numeric_casts = "warn"
unexpected_cfgs = "warn"
unsafe_op_in_unsafe_fn = "warn"                         # `unsafe_op_in_unsafe_fn` may become the default in future Rust versions: https://github.com/rust-lang/rust/issues/71668
unused_extern_crates = "warn"
unused_import_braces = "warn"
unused_lifetimes = "warn"
